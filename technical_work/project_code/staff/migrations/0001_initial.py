# Generated by Django 2.1.5 on 2019-03-15 12:29

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_posted', models.DateTimeField()),
                ('slide_number', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('overall_feedback', models.CharField(choices=[('POSITIVE', 'Good'), ('NEGATIVE', 'Bad'), ('NEUTRAL', 'So-So')], default='', max_length=30)),
                ('delivery_speed', models.CharField(choices=[('V-SLOW', 'Very Slow'), ('SLOW', 'Little Slow'), ('NORMAL', 'Just Right'), ('FAST', 'Little Fast'), ('V-FAST', 'Very Fast')], default='NORMAL', max_length=30)),
                ('content_complexity', models.CharField(choices=[('V-HARD', 'Very Difficult'), ('HARD', 'Slightly Difficult'), ('NORMAL', 'Normal'), ('EASY', 'Slightly Easy'), ('V-EASY', 'Very Easy')], default='', max_length=30)),
                ('content_presentation', models.CharField(choices=[('NEGATIVE', 'Not Well Presented'), ('NEUTRAL', 'Well Presented'), ('POSITIVE', 'Very Well Presented')], default='', max_length=30)),
                ('level_of_engagement', models.CharField(choices=[('NEGATIVE', 'Not Engaging/Interesting'), ('NEUTRAL', 'Engaging/Interesting'), ('POSITIVE', 'Very Engaging/Interesting')], default='', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Lecture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('slide_count', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('notes', models.TextField(null=True)),
                ('date_created', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=300)),
                ('time_posted', models.DateTimeField()),
                ('is_reviewed', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(null=True)),
                ('code', models.CharField(max_length=6, unique=True, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z]*$', 'Only alphanumeric characters allowed.')])),
                ('is_running', models.BooleanField(default=False)),
                ('is_taking_questions', models.BooleanField(default=True)),
                ('lecture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staff.Lecture')),
            ],
        ),
        migrations.AddField(
            model_name='question',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staff.Session'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='staff.Session'),
        ),
    ]
